groups:
  - name: mlops_platform_services
    interval: 30s
    rules:
      # Critical: Service Down
      - alert: MLOpsServiceDown
        expr: up{job=~"model-registry|feature-store|experiment-tracking|pipeline-orchestrator|ab-testing"} == 0
        for: 2m
        labels:
          severity: critical
          team: mlops
        annotations:
          summary: "MLOps service {{ $labels.job }} is down"
          description: "{{ $labels.job }} has been down for more than 2 minutes. Instance: {{ $labels.instance }}"
          
      # Warning: High API Response Time
      - alert: HighAPIResponseTime
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (job, le)) > 0.2
        for: 5m
        labels:
          severity: warning
          team: mlops
        annotations:
          summary: "High API response time for {{ $labels.job }}"
          description: "95th percentile response time for {{ $labels.job }} is {{ $value }}s, above 200ms threshold."
          
      # Critical: Model Registry Storage Full
      - alert: ModelRegistryStorageFull
        expr: minio_disk_usage_percent{job="minio"} > 90
        for: 5m
        labels:
          severity: critical
          team: mlops
        annotations:
          summary: "Model Registry storage above 90%"
          description: "MinIO storage usage is {{ $value }}%, immediate action required."
          
      # Warning: Feature Store Query Latency
      - alert: FeatureStoreQueryLatency
        expr: feature_store_query_duration_seconds{quantile="0.95"} > 0.5
        for: 5m
        labels:
          severity: warning
          team: mlops
        annotations:
          summary: "Feature Store query latency high"
          description: "95th percentile query latency is {{ $value }}s, above 500ms threshold."
          
      # Critical: Pipeline Failure Rate High
      - alert: PipelineFailureRateHigh
        expr: rate(pipeline_executions_total{status="failed"}[5m]) / rate(pipeline_executions_total[5m]) > 0.1
        for: 5m
        labels:
          severity: critical
          team: mlops
        annotations:
          summary: "Pipeline failure rate above 10%"
          description: "Pipeline failure rate is {{ $value }}, indicating system issues."
          
  - name: infrastructure_health
    interval: 30s
    rules:
      # Critical: Database down
      - alert: PostgreSQLDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          team: mlops
        annotations:
          summary: "PostgreSQL database is down"
          description: "PostgreSQL has been down for more than 1 minute."
          
      # Critical: Redis down
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          team: mlops
        annotations:
          summary: "Redis cache is down"
          description: "Redis has been down for more than 1 minute."
          
      # Critical: MinIO down
      - alert: MinIODown
        expr: up{job="minio"} == 0
        for: 2m
        labels:
          severity: critical
          team: mlops
        annotations:
          summary: "MinIO object storage is down"
          description: "MinIO has been down for more than 2 minutes."
          
      # Warning: High memory usage
      - alert: HighMemoryUsage
        expr: container_memory_usage_bytes{name=~"mlops-platform.*"} / container_spec_memory_limit_bytes > 0.9
        for: 5m
        labels:
          severity: warning
          team: infrastructure
        annotations:
          summary: "Container {{ $labels.name }} memory usage above 90%"
          description: "Container memory usage is {{ $value }}%, consider scaling."
          
      # Warning: High CPU usage
      - alert: HighCPUUsage
        expr: rate(container_cpu_usage_seconds_total{name=~"mlops-platform.*"}[5m]) > 0.9
        for: 5m
        labels:
          severity: warning
          team: infrastructure
        annotations:
          summary: "Container {{ $labels.name }} CPU usage above 90%"
          description: "Container CPU usage is high, consider scaling."
          
  - name: ab_testing_safety
    interval: 15s
    rules:
      # Critical: A/B test safety violation
      - alert: ABTestSafetyViolation
        expr: ab_test_model_crisis_detection_rate < 0.99
        for: 30s
        labels:
          severity: critical
          team: healthcare-ai
          action: stop_experiment
        annotations:
          summary: "A/B test safety violation - crisis detection below threshold"
          description: "Model {{ $labels.model_id }} in experiment {{ $labels.experiment_id }} has crisis detection rate {{ $value }}. Experiment should be stopped immediately."
          
      # Warning: A/B test performance degradation
      - alert: ABTestPerformanceDegradation
        expr: |
          (ab_test_model_accuracy{model="test"} / ab_test_model_accuracy{model="control"} - 1) < -0.05
        for: 5m
        labels:
          severity: warning
          team: healthcare-ai
        annotations:
          summary: "A/B test model performing 5% worse than control"
          description: "Test model in experiment {{ $labels.experiment_id }} is performing {{ $value }}% worse than control."