# MLOps Platform Environment Variables
# 
# SECURITY WARNING: Never commit actual credentials to version control
# Copy this file to .env and fill in your secure values
# Generate strong passwords using: openssl rand -base64 32

# PostgreSQL Database
POSTGRES_USER=mlops
POSTGRES_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD
POSTGRES_DB=mlops_platform
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

# MLflow specific database user
MLFLOW_USER=mlflow
MLFLOW_PASSWORD=CHANGE_ME_USE_DIFFERENT_STRONG_PASSWORD
MLFLOW_DB=mlflow

# MinIO Object Storage
MINIO_ROOT_USER=CHANGE_ME_NO_DEFAULT_VALUES
MINIO_ROOT_PASSWORD=CHANGE_ME_MINIMUM_8_CHARACTERS
MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}

# Grafana Admin
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=CHANGE_ME_STRONG_ADMIN_PASSWORD

# Redis (if authentication is enabled)
REDIS_PASSWORD=CHANGE_ME_IF_AUTH_ENABLED

# Application Secrets
SECRET_KEY=CHANGE_ME_USE_LONG_RANDOM_STRING
JWT_SECRET_KEY=CHANGE_ME_DIFFERENT_FROM_SECRET_KEY

# Environment Configuration
ENVIRONMENT=development  # development, staging, production

# Service URLs (adjust for your deployment)
MODEL_REGISTRY_URL=http://model-registry:8000
EXPERIMENT_TRACKING_URL=http://experiment-tracking:8003
FEATURE_STORE_URL=http://feature-store:8002
PIPELINE_ORCHESTRATOR_URL=http://pipeline-orchestrator:8004
AB_TESTING_URL=http://ab-testing:8090

# Monitoring
PROMETHEUS_URL=http://prometheus:9090
ALERTMANAGER_URL=http://alertmanager:9093

# Security Settings
ENABLE_HTTPS=false  # Set to true in production
ENABLE_AUTH=true
API_KEY_HEADER=X-API-Key

# Logging
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL

# Resource Limits
MAX_UPLOAD_SIZE_MB=1000
REQUEST_TIMEOUT_SECONDS=300

# Healthcare AI Specific (if integrated)
HEALTHCARE_SERVICE_URL=http://healthcare-ai:8080
MIN_CRISIS_DETECTION_RATE=0.99
MIN_RESPONSE_QUALITY_SCORE=0.8

# External Integrations (optional)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
# PAGERDUTY_API_KEY=YOUR_PAGERDUTY_API_KEY

# Cloud Provider Credentials (if applicable)
# AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY
# AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_KEY
# AWS_REGION=us-west-2

# INSTRUCTIONS FOR GENERATING SECURE PASSWORDS:
# 
# 1. Using OpenSSL (recommended):
#    openssl rand -base64 32
#
# 2. Using Python:
#    python -c "import secrets; print(secrets.token_urlsafe(32))"
#
# 3. Using pwgen:
#    pwgen -s 32 1
#
# 4. Password Requirements:
#    - Minimum 12 characters (32+ recommended for secrets)
#    - Mix of uppercase, lowercase, numbers, and special characters
#    - Unique password for each service
#    - No dictionary words or patterns
#
# 5. For Kubernetes deployments:
#    - Use external secret management (Vault, AWS Secrets Manager, etc.)
#    - Never use base64 encoding as encryption
#    - Rotate secrets regularly
#
# 6. Security Best Practices:
#    - Store .env file outside of version control
#    - Set restrictive file permissions: chmod 600 .env
#    - Use different credentials for each environment
#    - Enable audit logging for credential access
#    - Implement secret rotation policies